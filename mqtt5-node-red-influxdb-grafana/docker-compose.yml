name: STM32-IoT

services:
  mqtt5:
    image: eclipse-mosquitto:latest
    container_name: mqtt5
    ports:
      - "1883:1883" # MQTT port
      - "9001:9001" # WebSocket port
    volumes:
      - mqtt-config:/mosquitto/config:rw
      - mqtt-data:/mosquitto/data:rw
      - mqtt-log:/mosquitto/log:rw
      - ./mosquitto.conf:/mosquitto/config/mosquitto.conf # Custom config
    networks:
      - iot-network
    restart: unless-stopped
    # config for host.docker.internal

  node-red:
    #image: nodered/node-red:latest
    build:
      context: .
      dockerfile: Dockerfile
    container_name: node-red
    environment:
      - TZ=America/Sao_Paulo
    ports:
      - "1881:1880" # Node-RED UI, left 1880 for CubeMonitor
    volumes:
      - node-red-data:/data
    depends_on:
      - mqtt5
    networks:
      - iot-network
    restart: unless-stopped

  influxdb2:
    image: influxdb:alpine
    container_name: influxdb2
    ports:
      - "8086:8086" # InfluxDB UI and API
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_USERNAME:-myusername}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD:-mypassword}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_TOKEN:-mytoken}
      - DOCKER_INFLUXDB_INIT_ORG=IoT
      - DOCKER_INFLUXDB_INIT_BUCKET=Node-RED
      - DOCKER_INFLUXDB_INIT_RETENTION=1w
    volumes:
      - influxdb2-data:/var/lib/influxdb2
      - influxdb2-config:/etc/influxdb2
    networks:
      - iot-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana-server
    # Map the default HTTP port (3000) from the container to the host
    ports:
      - "3000:3000"
    # Persistence for Grafana data (dashboards, users, configuration)
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped
    # Environmental variables for basic setup
    environment:
      # Optional: Set default admin credentials
     # - GF_AUTH_BASIC_ENABLED=false
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD:-promgrafana}
    networks:
      - iot-network
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus-server
    # Map the default HTTP port (9090) from the container to the host
    ports:
      - "9090:9090"
    # Mount the local prometheus.yml config file into the container
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      # Optional: Persistence for metrics data
      - prometheus_data:/prometheus
    restart: unless-stopped
    # Optional: Set a command to specify the config file location (though it's the default)
    # command:
    #   - '--config.file=/etc/prometheus/prometheus.yml'
    #   - '--storage.tsdb.path=/prometheus'
    networks:
      - iot-network
    # https://ngrok.com/docs/using-ngrok-with/docker/
  # ngrok:
  #   image: ngrok/ngrok:latest
  #   command:
  #     - "http"
  #     - "http://host.docker.internal:3000" # Forward to Grafana
  #   container_name: ngrok
  #   environment:
  #     - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
  #   ports:
  #     - 4040:4040
volumes:
  mqtt-config:
    driver: local
  mqtt-data:
    driver: local
  mqtt-log:
    driver: local
  node-red-data:
    driver: local
  influxdb2-data:
    driver: local
  influxdb2-config:
    driver: local
  grafana_data:
    driver: local
  prometheus_data:
    driver: local

networks:
  iot-network:
    driver: bridge
